package(default_visibility = ["//visibility:public"])

exports_files([
    "deploy.yaml",
    "deploy-nonpreempt.yaml",
    "deploy-linker.yaml",
    "deploy-adw.yaml",
    "service.yaml",
    "service-adw.yaml",
    "pv-adw-config.yaml",
    "pv-adw-resources.yaml",
    "pvc-adw-config.yaml",
    "pvc-adw-resources.yaml",
    "pvc-linker.yaml",
])

load("@k8s_deploy//:defaults.bzl", "k8s_deploy")
load(
    "//:helpers/k8s.bzl",
    manifest = "template_manifest",
)

manifest(
    name = "manifest_ingress",
    template = "ingress.yaml",
)

k8s_deploy(
    name = "dev_ingress",
    template = ":manifest_ingress",
)

manifest(
    name = "manifest_pvc-adw-config",
    template = "pvc-adw-config.yaml",
)

manifest(
    name = "manifest_pvc-adw-resources",
    template = "pvc-adw-resources.yaml",
)

manifest(
    name = "manifest_pvc-linker",
    template = "pvc-linker.yaml",
)

manifest(
    name = "manifest_pv-adw-config",
    template = "pv-adw-config.yaml",
)

manifest(
    name = "manifest_pv-adw-resources",
    template = "pv-adw-resources.yaml",
)

k8s_deploy(
    name = "dev_pvc-adw-resources",
    template = ":manifest_pvc-adw-resources",
)

k8s_deploy(
    name = "dev_pv-adw-resources",
    template = ":manifest_pv-adw-resources",
)

k8s_deploy(
    name = "dev_pvc-adw-config",
    template = ":manifest_pvc-adw-config",
)

k8s_deploy(
    name = "dev_pv-adw-config",
    template = ":manifest_pv-adw-config",
)

k8s_deploy(
    name = "dev_pvc-linker",
    template = ":manifest_pvc-linker",
)

manifest(
    name = "manifest_pv-linker",
    template = "pv-linker.yaml",
)

k8s_deploy(
    name = "dev_pv-linker",
    template = ":manifest_pv-linker",
)

load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")

k8s_objects(
    name = "dev_pv_pvc_adw",
    objects = [
        ":dev_pvc-adw-config",
        ":dev_pvc-adw-resources",
        ":dev_pv-adw-config",
        ":dev_pv-adw-resources",
    ],
)
